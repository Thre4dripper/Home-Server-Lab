version: '3.8'

services:
  homarr:
    image: ghcr.io/homarr-labs/homarr:${HOMARR_TAG:-latest}
    container_name: ${CONTAINER_NAME:-homarr}
    restart: ${RESTART_POLICY:-unless-stopped}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SECRET_ENCRYPTION_KEY=${SECRET_ENCRYPTION_KEY}
      - NODE_ENV=${NODE_ENV:-production}
      - TZ=${TIMEZONE:-UTC}
      
      # Database Configuration
      - DB_DIALECT=${DB_DIALECT:-postgresql}
      - DB_DRIVER=${DB_DRIVER:-node-postgres}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${POSTGRES_USER:-homarr}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB:-homarr}
      
      # Redis Configuration
      - REDIS_IS_EXTERNAL=${REDIS_IS_EXTERNAL:-true}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DATABASE_INDEX=${REDIS_DATABASE_INDEX:-0}
      
      # Authentication Configuration
      - AUTH_PROVIDERS=${AUTH_PROVIDERS:-credentials}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Docker Integration
      - DOCKER_HOSTNAMES=${DOCKER_HOSTNAMES:-}
      - DOCKER_PORTS=${DOCKER_PORTS:-}
      - ENABLE_DOCKER=${ENABLE_DOCKER:-true}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./homarr_data:/appdata
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${HOMARR_PORT:-7575}:7575"
    networks:
      - homarr
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7575"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: ${HOMARR_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${HOMARR_MEMORY_RESERVATION:-256M}
  
  postgres:
    image: postgres:${POSTGRES_VERSION:-16}
    container_name: ${POSTGRES_CONTAINER_NAME:-homarr-postgres}
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-homarr}
      - POSTGRES_USER=${POSTGRES_USER:-homarr}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=${TIMEZONE:-UTC}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - homarr
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-homarr} -d ${POSTGRES_DB:-homarr}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: ${POSTGRES_MEMORY_LIMIT:-512M}
        reservations:
          memory: ${POSTGRES_MEMORY_RESERVATION:-128M}

  redis:
    image: redis:${REDIS_VERSION:-7}
    container_name: ${REDIS_CONTAINER_NAME:-homarr-redis}
    restart: ${RESTART_POLICY:-unless-stopped}
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory ${REDIS_MEMORY_LIMIT:-256mb} --maxmemory-policy allkeys-lru
    environment:
      - TZ=${TIMEZONE:-UTC}
    volumes:
      - ./redis_data:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - homarr
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: ${REDIS_MEMORY_LIMIT:-256M}
        reservations:
          memory: ${REDIS_MEMORY_RESERVATION:-64M}

networks:
  homarr:
    driver: bridge